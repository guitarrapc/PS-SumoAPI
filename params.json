{"name":"Ps-sumologicapi","tagline":"PowerShell SumoLogic API Management Module","body":"PSSumoLogicAPI\r\n==========\r\n\r\nSumoLogic Collector management API Modules.\r\n\r\n# SumoLogic Collector Management API\r\n\r\nSee here.\r\n\r\n[SumoLogic/sumo-api-doc](https://github.com/SumoLogic/sumo-api-doc/wiki/collector-management-api)\r\n\r\n# Cmdlets\r\n\r\nHere's Cmdlets use in public\r\n\r\n```text\r\nCommandType Name                                               ModuleName    \r\n----------- ----                                               ----------    \r\nFunction    Get-PSSumoLogicApiCollectorAsyncResult             PSSumoLogicAPI\r\nFunction    Get-PSSumoLogicApiCollectors                       PSSumoLogicAPI\r\nFunction    Get-PSSumoLogicApiCollectorSource                  PSSumoLogicAPI\r\nFunction    Get-PSSumoLogicApiCredential                       PSSumoLogicAPI\r\nFunction    Invoke-PSSumoLogicApiInvokeCollectorAsync          PSSumoLogicAPI\r\nFunction    Invoke-PSSumoLogicApiInvokeCollectorSourceAsync    PSSumoLogicAPI\r\nFunction    New-PSSumoLogicApiCredential                       PSSumoLogicAPI\r\nFunction    New-PSSumoLogicApiRunSpacePool                     PSSumoLogicAPI\r\nFunction    Remove-PSSumoLogicApiCollectors                    PSSumoLogicAPI\r\nFunction    Remove-PSSumoLogicApiCollectorsAsync               PSSumoLogicAPI\r\nFunction    Set-PSSumoLogicApiCollectorSource                  PSSumoLogicAPI\r\nFunction    Test-IsPSSumoLogicApiCollectorAsyncStatusCompleted PSSumoLogicAPI\r\n```\r\n\r\n# Test\r\n\r\nYou can find sample source in [Test](https://github.com/guitarrapc/PSSumoLogicAPI/tree/master/PSSumoLogicAPI/Test)\r\n\r\n## Credential\r\n\r\n### Create Credential secure Password File\r\n\r\n```PowerShell\r\nNew-PSSumoLogicApiCredential -user hoge@hoge.com\r\n```\r\n\r\nif you configure ```.\\PSSumoLogicAPI\\config\\PSSumoLogicAPI-config.ps1``` as to input username, \r\n\r\n```PowerShell\r\n$PSSumoLogicAPI.credential = @{\r\n    user                        = \"INPUT YOUR API KEY HERE\"\r\n}\r\n\r\n#change it like\r\n\r\n$PSSumoLogicAPI.credential = @{\r\n    user                        = \"hoge@hoge.com\"\r\n}\r\n\r\n```\r\nyou can omit -user parameter, as default use ```$PSSumoLogicAPI.credential.user```, in this case hoge@hoge.com\r\n\r\n```PowerShell\r\nNew-PSSumoLogicApiCredential\r\n```\r\n\r\n\r\n### Get Credential secure Password from file\r\n\r\nOnece you create credential, you can get it easily.\r\n\r\n```PowerShell\r\nGet-PSSumoLogicApiCredential -user hoge@hoge.com\r\n```\r\n\r\nyou can omit username if you configure ```.\\PSSumoLogicAPI\\config\\PSSumoLogicAPI-config.ps1```\r\n\r\n```PowerShell\r\nGet-PSSumoLogicApiCredential\r\n```\r\n\r\nyou can reuse Credential.\r\n\r\n```PowerShell\r\n$credential = Get-PSSumoLogicApiCredential\r\n```\r\n\r\n\r\n## Collector\r\n\r\n### Get SumoLogic Collectors of your account\r\n\r\n```PowerShell\r\nGet-PSSumoLogicApiCollectors -Credential $credential\r\n```\r\n\r\nYou can reuse collectors.\r\n\r\n```PowerShell\r\n$Collectors = Get-PSSumoLogicApiCollectors -Credential $credential\r\n```\r\n\r\nspecify collector ids.\r\n```PowerShell\r\nGet-PSSumoLogicApiCollectors -Credential $credential -CollectorIds \"collectorId\"\r\n```\r\n\r\nfor multiple collectorIds, you can use -Async switch to invoke command asynchronous.\r\n\r\n```PowerShell\r\nGet-PSSumoLogicApiCollectors -Credential $credential -CollectorIds \"collectorId\" -Async\r\n```\r\n\r\nit will speed up about x5 then not using switch.\r\n\r\n### Remove Collectors\r\n\r\nSpecify Collector id to remove collectors\r\n\r\n```PowerShell\r\nRemove-PSSumoLogicApiCollectors -CollectorIds $Collectors.id -Credential $credential\r\n```\r\n\r\nAsynchronouse execution will speed up\r\n```PowerShell\r\nRemove-PSSumoLogicApiCollectors -CollectorIds $Collectors.id -Credential $credential -Async\r\n```\r\n\r\n## Source\r\n\r\n### Get SumoLogic Source for Collectors of your account\r\n\r\nGet all collectors source\r\n```PowerShell\r\n# Get Credential\r\n$credential = Get-PSSumoLogicApiCredential\r\n\r\n# Obtain Collectors\r\n$host.Ui.WriteVerboseLine(\"Running Synchronize request\")\r\n$collectors = Get-PSSumoLogicApiCollectors -Credential $credential\r\n\r\n# Obtain Source\r\n$host.Ui.WriteVerboseLine(\"Running Synchronize request\")\r\nGet-PSSumoLogicApiCollectorSource -Credential $credential -CollectorIds $collectors.id\r\n```\r\n\r\nGet First 4 Collectors source\r\n\r\n```PowerShell\r\n# Get Credential\r\n$credential = Get-PSSumoLogicApiCredential\r\n\r\n# Obtain Collectors\r\n$host.Ui.WriteVerboseLine(\"Running Synchronize request\")\r\n$collectors = Get-PSSumoLogicApiCollectors -Credential $credential | select -First 4\r\n\r\n# Obtain Source\r\n$host.Ui.WriteVerboseLine(\"Running Synchronize request\")\r\nGet-PSSumoLogicApiCollectorSource -Credential $credential -CollectorIds $collectors.id\r\n```\r\n\r\nAsynchronouse execution will speed up\r\n\r\n```PowerShell\r\n# Get Credential\r\n$credential = Get-PSSumoLogicApiCredential\r\n\r\n# Obtain Collectors\r\n$host.Ui.WriteVerboseLine(\"Running Synchronize request\")\r\n$collectors = Get-PSSumoLogicApiCollectors -Credential $credential\r\n\r\n# Obtain Source\r\n$host.Ui.WriteVerboseLine(\"Running Synchronize request\")\r\nGet-PSSumoLogicApiCollectorSource -Credential $credential -CollectorIds $collectors.id -Async\r\n```\r\n\r\n### Set SumoLogic Source for Collectors of your account\r\n\r\nYou can set for each Source Type, will show in intellisence.\r\n```PowerShell\r\n$credential = Get-PSSumoLogicApiCredential\r\n\r\n# Obtain Collectors\r\n$collectors = Get-PSSumoLogicApiCollectors -Credential $credential | Select -First 2\r\n\r\n# Set Sources\r\n,(\"Log\",\"C:\\logs\\Log.log\",\"Log Description\") | %{Set-SumoLogicApiCollectorSource -CollectorIds $Collectors.Id -pathExpression $_[1] -name $_[0] -sourceType LocalFile -category $_[0] -description $_[2] -Credential $credential}\r\n```\r\n\r\nAsynchronouse execution will speed up\r\n\r\n```PowerShell\r\n$credential = Get-PSSumoLogicApiCredential\r\n\r\n# Obtain Collectors\r\n$collectors = Get-PSSumoLogicApiCollectors -Credential $credential | Select -First 2\r\n\r\n# Set Sources\r\n,(\"Log\",\"C:\\logs\\Log.log\",\"Log Description\") | %{Set-SumoLogicApiCollectorSource -CollectorIds $Collectors.Id -pathExpression $_[1] -name $_[0] -sourceType LocalFile -category $_[0] -description $_[2] -Credential $credential -Async}\r\n```\r\n\r\n### Remove Source\r\n\r\nWill be create.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}