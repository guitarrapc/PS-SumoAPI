{"name":"Ps-sumologicapi","tagline":"PowerShell SumoLogic API Management Module","body":"PS-SumoLogicAPI\r\n==========\r\n\r\nSumoLogic Collector management API Modules.\r\n\r\n# SumoLogic Collector Management API\r\n\r\nSee here.\r\n\r\n[SumoLogic/sumo-api-doc](https://github.com/SumoLogic/sumo-api-doc/wiki/collector-management-api)\r\n\r\n# Cmdlets\r\n\r\nHere's Cmdlets use in public\r\n\r\n```text\r\nCommandType Name                             ModuleName     \r\n----------- ----                             ----------     \r\nFunction    Get-SumoLogicCollectors          PS-SumoLogicAPI\r\nFunction    Get-SumoLogicCollectorsSource    PS-SumoLogicAPI\r\nFunction    Get-SumoLogicCredential          PS-SumoLogicAPI\r\nFunction    New-SumoLogicCredential          PS-SumoLogicAPI\r\nFunction    Remove-SumoLogicCollectors       PS-SumoLogicAPI\r\nFunction    Remove-SumoLogicCollectorsSource PS-SumoLogicAPI\r\nFunction    Set-SumoLogicCollectorsSource    PS-SumoLogicAPI\r\n```\r\n\r\n# Sample\r\n\r\nYou can find sample source in (sample)[https://github.com/guitarrapc/PS-SumoLogicAPI/tree/master/Sample]\r\n\r\n## Credential\r\n\r\n### Create Credential secure Password File\r\n\r\n```PowerShell\r\nNew-SumoLogicCredential -user hoge@hoge.com\r\n```\r\n\r\n### Get Credential secure Password from file\r\n\r\n```PowerShell\r\nGet-SumoLogicCredential -user hoge@hoge.com\r\n```\r\n\r\nyou can reuse Credential.\r\n\r\n```PowerShell\r\n$credential = Get-SumoLogicCredential -user hoge@hoge.com\r\n```\r\n\r\n\r\n## Collector\r\n\r\n### Get SumoLogic Collectors of your account\r\n\r\n```PowerShell\r\nGet-SumoLogicCollectors -Credential $credential\r\n```\r\n\r\nspecify collector id\r\n```PowerShell\r\nGet-SumoLogicCollectors -CollectorIds \"CollectorId\" -Credential $credential\r\n```\r\n\r\nYou can reuse collectors.\r\n\r\n```PowerShell\r\n$Collectors = Get-SumoLogicCollectors -Credential $credential\r\n```\r\n\r\n### Remove Collectors\r\n\r\nSpecify Collector id to remove collectors\r\n```PowerShell\r\nRemove-SumoLogicCollectors -CollectorIds $Collectors.id -Credential $credential\r\n```\r\nyou can run as parallel for collectors by adding -parallel switch. (using workflow 5 parallel)\r\n```PowerShell\r\nRemove-SumoLogicCollectors -CollectorIds $Collectors.id -Credential $credential -parallel\r\n```\r\n\r\n## Source\r\n\r\n### Get SumoLogic Source for Collectors of your account\r\n\r\nGet all collectors source\r\n```PowerShell\r\nGet-SumoLogicCollectorsSource -CollectorIds $Collectors.id -Credential $credential -parallel | ft\r\n```\r\n\r\nGet Specific Collectors source\r\n```PowerShell\r\nGet-SumoLogicCollectorsSource -CollectorIds \"collector id\" -Credential $credential\r\n```\r\n\r\nUsing <where> to specify source name\r\n```PowerShell\r\nGet-SumoLogicCollectorsSource -CollectorIds \"collector id\" -Credential $credential | where name -eq \"test\"\r\n```\r\n### Set SumoLogic Source for Collectors of your account\r\n\r\nYou can set for each Source Type, will show in intellisence.\r\n```PowerShell\r\nSet-SumoLogicCollectorsSource -CollectorIds \"Collector id\" -pathExpression \"Path to Log\" -name \"Source name\" -sourceType \"Select from intellisence\" -category \"category name\" -description \"description\" -Credential $credential\r\n```\r\n\r\nyou can run as parallel for sources by adding -parallel switch. (using workflow 5 parallel)\r\n```PowerShell\r\nSet-SumoLogicCollectorsSource -CollectorIds \"Collector id\" -pathExpression \"Path to Log\" -name \"Source name\" -sourceType \"Select from intellisence\" -category \"category name\" -description \"description\" -Credential $credential -parallel\r\n```\r\n\r\n### Remove Source\r\n\r\nSpecify Collector id to remove Source\r\n```PowerShell\r\nRemove-SumoLogicCollectorsSource -CollectorId 4105438 -SourceIds $(Get-SumoLogicCollectorsSource -CollectorIds 4105438 -Credential $credential | where name -eq \"test\").id -Credential $credential -parallel\r\n```\r\n\r\nOr foreach collectors for specific source name.\r\n```PowerShell\r\n$collectors | %{\r\n    $sourceids = Get-SumoLogicCollectorsSource -Credential $credential -CollectorIds $_.id | where name -like \"$sourcename*\"\r\n    Remove-SumoLogicCollectorsSource -SourceIds $sourceids.id -CollectorId $_.id -Credential $credential -parallel\r\n}\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}